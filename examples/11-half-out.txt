+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 11-half-in.txt
+++ output      = 11-half-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 10
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification half from 11-half-in.txt successfully parsed
+++ Listing
         1: specification half
         2: sorts
         3:      bool nat
         4: constructors
         5:      0: -> nat
         6:      false: -> bool
         7:      s: nat -> nat
         8:      true: -> bool
         9: defined functions
        10:      +: nat nat -> nat
        11:      half: nat -> nat
        12: precedence
        13:      + > half > s > 0 > false = true
        14: axioms
        15:      0 + x = x;
        16:      half(0) = 0;
        17:      half(s(0)) = 0;
        18:      s(x) + y = s(x + y);
        19:      half(s(s(x))) = s(half(x));
        20: conjectures
        21:      half(x + x) = x;
        22: end
+++ finitary sorts: bool
+++ Rewrite System 
	0 + x -> x
	half(0) -> 0
	half(s(0)) -> 0
	s(x) + y -> s(x + y)
	half(s(s(x))) -> s(half(x))
+++ inductive positions:
... for +: 0
... for half: 0 0.0
+++ maximal depths of left-hand sides:
... for half: 3
... for +: 2
+++ general maximal depth = 3
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for half
... ... nat
		0
		s(0)
		s(s(x))
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	half(x + x) = x

+++ inference system initiated
+++ treating clause
	half(x + x) = x
+++ inductive narrowing on conjecture
	half(x + x) = x
... induction variables of
	half(x + x) = x
... are:
	x:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	half(x + x) = x
... with variable x
+++ creating new conjecture
	half(0 + 0) = 0
+++ creating new conjecture
	half(s(xts) + s(xts)) = s(xts)
--- clause
	half(0 + 0) = 0
... reduced to tautology
	0 = 0
--- clause
	half(s(xts) + s(xts)) = s(xts)
... reduced in 1 step to
	half(s(xts + s(xts))) = s(xts)
+++ inductive narrowing succeeded
--- clause
	half(x + x) = x
... oriented to rule
	half(x + x) -> x
+++ added new clause(s)
	half(s(xts + s(xts))) = s(xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	half(s(xts + s(xts))) = s(xts)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	half(x + x) -> x
--- Primal Grammar:
	<empty>

+++ treating clause
	half(s(xts + s(xts))) = s(xts)
+++ inductive narrowing on conjecture
	half(s(xts + s(xts))) = s(xts)
... induction variables of
	half(s(xts + s(xts))) = s(xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	half(s(xts + s(xts))) = s(xts)
... with variable xts
+++ creating new conjecture
	half(s(0 + s(0))) = s(0)
+++ creating new conjecture
	half(s(s(xts) + s(s(xts)))) = s(s(xts))
--- clause
	half(s(0 + s(0))) = s(0)
... reduced to tautology
	s(0) = s(0)
--- clause
	half(s(s(xts) + s(s(xts)))) = s(s(xts))
... reduced in 2 steps to
	s(half(xts + s(s(xts)))) = s(s(xts))
... decomposed into new clause(s)
	half(xts + s(s(xts))) = s(xts)
+++ inductive narrowing succeeded
--- clause
	half(s(xts + s(xts))) = s(xts)
... oriented to rule
	half(s(xts + s(xts))) -> s(xts)
+++ added new clause(s)
	half(xts + s(s(xts))) = s(xts)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	half(xts + s(s(xts))) = s(xts)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	half(x + x) -> x
	half(s(xts + s(xts))) -> s(xts)
--- Primal Grammar:
	<empty>

+++ treating clause
	half(xts + s(s(xts))) = s(xts)
+++ inductive narrowing on conjecture
	half(xts + s(s(xts))) = s(xts)
... induction variables of
	half(xts + s(s(xts))) = s(xts)
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	half(xts + s(s(xts))) = s(xts)
... with variable xts
+++ creating new conjecture
	half(0 + s(s(0))) = s(0)
+++ creating new conjecture
	half(s(xts) + s(s(s(xts)))) = s(s(xts))
--- clause
	half(0 + s(s(0))) = s(0)
... reduced to tautology
	s(0) = s(0)
--- clause
	half(s(xts) + s(s(s(xts)))) = s(s(xts))
... reduced in 1 step to
	half(s(xts + s(s(s(xts))))) = s(s(xts))
+++ inductive narrowing succeeded
--- clause
	half(xts + s(s(xts))) = s(xts)
... oriented to rule
	half(xts + s(s(xts))) -> s(xts)
+++ added new clause(s)
	half(s(xts + s(s(s(xts))))) = s(s(xts))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	half(s(xts + s(s(s(xts))))) = s(s(xts))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	half(x + x) -> x
	half(s(xts + s(xts))) -> s(xts)
	half(xts + s(s(xts))) -> s(xts)
--- Primal Grammar:
	<empty>

+++ treating clause
	half(s(xts + s(s(s(xts))))) = s(s(xts))
+++ inductive narrowing on conjecture
	half(s(xts + s(s(s(xts))))) = s(s(xts))
... induction variables of
	half(s(xts + s(s(s(xts))))) = s(s(xts))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	half(s(xts + s(s(s(xts))))) = s(s(xts))
... with variable xts
+++ creating new conjecture
	half(s(0 + s(s(s(0))))) = s(s(0))
+++ creating new conjecture
	half(s(s(xts) + s(s(s(s(xts)))))) = s(s(s(xts)))
--- clause
	half(s(0 + s(s(s(0))))) = s(s(0))
... reduced to tautology
	s(s(0)) = s(s(0))
--- clause
	half(s(s(xts) + s(s(s(s(xts)))))) = s(s(s(xts)))
... reduced in 2 steps to
	s(half(xts + s(s(s(s(xts)))))) = s(s(s(xts)))
... decomposed into new clause(s)
	half(xts + s(s(s(s(xts))))) = s(s(xts))
+++ inductive narrowing succeeded
--- clause
	half(s(xts + s(s(s(xts))))) = s(s(xts))
... oriented to rule
	half(s(xts + s(s(s(xts))))) -> s(s(xts))
+++ added new clause(s)
	half(xts + s(s(s(s(xts))))) = s(s(xts))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	half(xts + s(s(s(s(xts))))) = s(s(xts))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	half(x + x) -> x
	half(s(xts + s(xts))) -> s(xts)
	half(xts + s(s(xts))) -> s(xts)
	half(s(xts + s(s(s(xts))))) -> s(s(xts))
--- Primal Grammar:
	<empty>

+++ treating clause
	half(xts + s(s(s(s(xts))))) = s(s(xts))
+++ inductive narrowing on conjecture
	half(xts + s(s(s(s(xts))))) = s(s(xts))
... induction variables of
	half(xts + s(s(s(s(xts))))) = s(s(xts))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	half(xts + s(s(s(s(xts))))) = s(s(xts))
... with variable xts
+++ creating new conjecture
	half(0 + s(s(s(s(0))))) = s(s(0))
+++ creating new conjecture
	half(s(xts) + s(s(s(s(s(xts)))))) = s(s(s(xts)))
--- clause
	half(0 + s(s(s(s(0))))) = s(s(0))
... reduced to tautology
	s(s(0)) = s(s(0))
--- clause
	half(s(xts) + s(s(s(s(s(xts)))))) = s(s(s(xts)))
... reduced in 1 step to
	half(s(xts + s(s(s(s(s(xts))))))) = s(s(s(xts)))
+++ inductive narrowing succeeded
--- clause
	half(xts + s(s(s(s(xts))))) = s(s(xts))
... oriented to rule
	half(xts + s(s(s(s(xts))))) -> s(s(xts))
+++ added new clause(s)
	half(s(xts + s(s(s(s(s(xts))))))) = s(s(s(xts)))
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	half(s(xts + s(s(s(s(s(xts))))))) = s(s(s(xts)))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	half(x + x) -> x
	half(s(xts + s(xts))) -> s(xts)
	half(xts + s(s(xts))) -> s(xts)
	half(s(xts + s(s(s(xts))))) -> s(s(xts))
	half(xts + s(s(s(s(xts))))) -> s(s(xts))
--- Primal Grammar:
	<empty>

+++ treating clause
	half(s(xts + s(s(s(s(s(xts))))))) = s(s(s(xts)))
+++ inductive narrowing on conjecture
	half(s(xts + s(s(s(s(s(xts))))))) = s(s(s(xts)))
... induction variables of
	half(s(xts + s(s(s(s(s(xts))))))) = s(s(s(xts)))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	half(s(xts + s(s(s(s(s(xts))))))) = s(s(s(xts)))
... with variable xts
+++ creating new conjecture
	half(s(0 + s(s(s(s(s(0))))))) = s(s(s(0)))
+++ creating new conjecture
	half(s(s(xts) + s(s(s(s(s(s(xts)))))))) = s(s(s(s(xts))))
--- clause
	half(s(0 + s(s(s(s(s(0))))))) = s(s(s(0)))
... reduced to tautology
	s(s(s(0))) = s(s(s(0)))
--- clause
	half(s(s(xts) + s(s(s(s(s(s(xts)))))))) = s(s(s(s(xts))))
... reduced in 2 steps to
	s(half(xts + s(s(s(s(s(s(xts)))))))) = s(s(s(s(xts))))
... decomposed into new clause(s)
	half(xts + s(s(s(s(s(s(xts))))))) = s(s(s(xts)))
+++ inductive narrowing succeeded
--- clause
	half(s(xts + s(s(s(s(s(xts))))))) = s(s(s(xts)))
... oriented to rule
	half(s(xts + s(s(s(s(s(xts))))))) -> s(s(s(xts)))
+++ added new clause(s)
	half(xts + s(s(s(s(s(s(xts))))))) = s(s(s(xts)))
... to conjectures
+++ active wrap
	half(s(xts + s(.))) = s(.)
... with sequence
	half(s(xts + s(xts))) = s(xts)
	half(s(xts + s(s(s(xts))))) = s(s(xts))
	half(s(xts + s(s(s(s(s(xts))))))) = s(s(s(xts)))
+++ primal grammar found for head
	{+, half, s}
... and wrap
	half(s(xts + s(.))) = s(.)
+++ Presburger system  = {
	^f0(0; xts) -> xts
	^f0($n0 + 1; xts) -> s(s(^f0($n0; xts)))
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
+++ }
+++ Lemma(s)           = 
	half(s(xts + s(^f0($n; xts)))) = s(^f1($n; xts))

+++ Status of the Inference System
--- Conjectures:
	half(xts + s(s(s(s(s(s(xts))))))) = s(s(s(xts)))
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	half(x + x) -> x
	half(s(xts + s(xts))) -> s(xts)
	half(xts + s(s(xts))) -> s(xts)
	half(s(xts + s(s(s(xts))))) -> s(s(xts))
	half(xts + s(s(s(s(xts))))) -> s(s(xts))
	half(s(xts + s(s(s(s(s(xts))))))) -> s(s(s(xts)))
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; xts) -> xts
	^f0($n0 + 1; xts) -> s(s(^f0($n0; xts)))
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
+++ }
+++ Lemma(s)           = 
	half(s(xts + s(^f0($n; xts)))) = s(^f1($n; xts))

+++ treating clause
	half(xts + s(s(s(s(s(s(xts))))))) = s(s(s(xts)))
+++ inductive narrowing on conjecture
	half(xts + s(s(s(s(s(s(xts))))))) = s(s(s(xts)))
... induction variables of
	half(xts + s(s(s(s(s(s(xts))))))) = s(s(s(xts)))
... are:
	xts:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	half(xts + s(s(s(s(s(s(xts))))))) = s(s(s(xts)))
... with variable xts
+++ creating new conjecture
	half(0 + s(s(s(s(s(s(0))))))) = s(s(s(0)))
+++ creating new conjecture
	half(s(xts) + s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(xts))))
--- clause
	half(0 + s(s(s(s(s(s(0))))))) = s(s(s(0)))
... reduced to tautology
	s(s(s(0))) = s(s(s(0)))
--- clause
	half(s(xts) + s(s(s(s(s(s(s(xts)))))))) = s(s(s(s(xts))))
... reduced in 1 step to
	half(s(xts + s(s(s(s(s(s(s(xts))))))))) = s(s(s(s(xts))))
--- clause
	half(s(xts + s(s(s(s(s(s(s(xts))))))))) = s(s(s(s(xts))))
... subsumed by lemma
	half(s(xts + s(^f0($n; xts)))) = s(^f1($n; xts))
... with substitution
	$n <- 3
+++ inductive narrowing succeeded
--- clause
	half(xts + s(s(s(s(s(s(xts))))))) = s(s(s(xts)))
... oriented to rule
	half(xts + s(s(s(s(s(s(xts))))))) -> s(s(s(xts)))
+++ active wrap
	half(xts + s(s(.))) = s(.)
... with sequence
	half(xts + s(s(xts))) = s(xts)
	half(xts + s(s(s(s(xts))))) = s(s(xts))
	half(xts + s(s(s(s(s(s(xts))))))) = s(s(s(xts)))
+++ primal grammar found for head
	{+, half, s}
... and wrap
	half(xts + s(s(.))) = s(.)
+++ Presburger system  = {
	^f0(0; xts) -> xts
	^f0($n0 + 1; xts) -> s(s(^f0($n0; xts)))
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
+++ }
+++ Lemma(s)           = 
	half(xts + s(s(^f0($n; xts)))) = s(^f1($n; xts))

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	half(x + x) -> x
	half(s(xts + s(xts))) -> s(xts)
	half(xts + s(s(xts))) -> s(xts)
	half(s(xts + s(s(s(xts))))) -> s(s(xts))
	half(xts + s(s(s(s(xts))))) -> s(s(xts))
	half(s(xts + s(s(s(s(s(xts))))))) -> s(s(s(xts)))
	half(xts + s(s(s(s(s(s(xts))))))) -> s(s(s(xts)))
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; xts) -> xts
	^f0($n0 + 1; xts) -> s(s(^f0($n0; xts)))
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
+++ }
+++ Lemma(s)           = 
	half(s(xts + s(^f0($n; xts)))) = s(^f1($n; xts))
	half(xts + s(s(^f0($n; xts)))) = s(^f1($n; xts))

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 7
... Number of induction steps      = 7
... Number of equational steps     = 0
... Number of case rewriting steps = 0
... Number of PG defined symbols   = 2
... Number of PG lemmas            = 2
... Elapsed time (seconds)         = 0.006
