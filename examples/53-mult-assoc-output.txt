+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 53-mult-assoc-input.txt
+++ output      = 53-mult-assoc-output.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 50
-----------------------------------------------------------------------

+++ specification CraftedMulAssoc3var from 53-mult-assoc-input.txt successfully parsed
+++ sorts: nat
+++ finitary sorts: <empty>
+++ symbol precedence = {* > + > s > 0}
+++ Rewrite System 
	x * 0 -> 0
	x + 0 -> x
	x + s(y) -> s(x + y)
	x * s(y) -> (x * y) + x
+++ inductive positions:
... for *: 1
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
... for *: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for *
... ... nat
		0
		s(x)
... for +
... ... nat
		0
		s(x)

+++ conjecture(s)
	(x * y) * z = x * (y * z)

+++ inference system initiated
+++ treating clause
	(x * y) * z = x * (y * z)
+++ inductive narrowing on conjecture
	(x * y) * z = x * (y * z)
... induction variables of
	(x * y) * z = x * (y * z)
... are:
	y:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	(x * y) * z = x * (y * z)
... with variable y
+++ creating new conjecture
	(x * 0) * z = x * (0 * z)
+++ creating new conjecture
	(x * s(xts)) * z = x * (s(xts) * z)
--- clause
	(x * 0) * z = x * (0 * z)
... reduced in 1 step to
	0 * z = x * (0 * z)
--- clause
	(x * s(xts)) * z = x * (s(xts) * z)
... reduced in 1 step to
	((x * xts) + x) * z = x * (s(xts) * z)
+++ inductive narrowing succeeded
--- clause
	(x * y) * z = x * (y * z)
... oriented to rule
	(x * y) * z -> x * (y * z)
+++ added new clause(s)
	0 * z = x * (0 * z)
	((x * xts) + x) * z = x * (s(xts) * z)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	0 * z = x * (0 * z)
	((x * xts) + x) * z = x * (s(xts) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	(x * y) * z -> x * (y * z)
--- Primal Grammar:
	<empty>

+++ treating clause
	0 * z = x * (0 * z)
+++ inductive narrowing on conjecture
	0 * z = x * (0 * z)
... induction variables of
	0 * z = x * (0 * z)
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	0 * z = x * (0 * z)
... with variable z
+++ creating new conjecture
	0 * 0 = x * (0 * 0)
+++ creating new conjecture
	0 * s(xts) = x * (0 * s(xts))
--- clause
	0 * 0 = x * (0 * 0)
... reduced to tautology
	0 = 0
--- clause
	0 * s(xts) = x * (0 * s(xts))
... reduced in 4 steps to
	0 * xts = x * (0 * xts)
+++ inductive narrowing succeeded
--- clause
	0 * z = x * (0 * z)
... oriented to rule
	x * (0 * z) -> 0 * z
+++ added new clause(s)
	0 * xts = x * (0 * xts)
... to conjectures
--- clause
	0 * xts = x * (0 * xts)
... reduced to tautology
	0 * xts = 0 * xts

+++ Status of the Inference System
--- Conjectures:
	((x * xts) + x) * z = x * (s(xts) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	(x * y) * z -> x * (y * z)
--- Primal Grammar:
	<empty>

+++ treating clause
	((x * xts) + x) * z = x * (s(xts) * z)
+++ inductive narrowing on conjecture
	((x * xts) + x) * z = x * (s(xts) * z)
... induction variables of
	((x * xts) + x) * z = x * (s(xts) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	((x * xts) + x) * z = x * (s(xts) * z)
... with variable xts
+++ creating new conjecture
	((x * 0) + x) * z = x * (s(0) * z)
+++ creating new conjecture
	((x * s(xts)) + x) * z = x * (s(s(xts)) * z)
--- clause
	((x * 0) + x) * z = x * (s(0) * z)
... reduced in 1 step to
	(0 + x) * z = x * (s(0) * z)
--- clause
	((x * s(xts)) + x) * z = x * (s(s(xts)) * z)
... reduced in 1 step to
	(((x * xts) + x) + x) * z = x * (s(s(xts)) * z)
+++ inductive narrowing succeeded
--- clause
	((x * xts) + x) * z = x * (s(xts) * z)
... oriented to rule
	((x * xts) + x) * z -> x * (s(xts) * z)
+++ added new clause(s)
	(0 + x) * z = x * (s(0) * z)
	(((x * xts) + x) + x) * z = x * (s(s(xts)) * z)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	(0 + x) * z = x * (s(0) * z)
	(((x * xts) + x) + x) * z = x * (s(s(xts)) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
--- Primal Grammar:
	<empty>

+++ treating clause
	(0 + x) * z = x * (s(0) * z)
+++ inductive narrowing on conjecture
	(0 + x) * z = x * (s(0) * z)
... induction variables of
	(0 + x) * z = x * (s(0) * z)
... are:
	x:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	(0 + x) * z = x * (s(0) * z)
... with variable x
+++ creating new conjecture
	(0 + 0) * z = 0 * (s(0) * z)
+++ creating new conjecture
	(0 + s(xts)) * z = s(xts) * (s(0) * z)
--- clause
	(0 + 0) * z = 0 * (s(0) * z)
... reduced in 1 step to
	0 * z = 0 * (s(0) * z)
--- clause
	(0 + s(xts)) * z = s(xts) * (s(0) * z)
... reduced in 1 step to
	s(0 + xts) * z = s(xts) * (s(0) * z)
+++ inductive narrowing succeeded
--- clause
	(0 + x) * z = x * (s(0) * z)
... oriented to rule
	(0 + x) * z -> x * (s(0) * z)
+++ added new clause(s)
	0 * z = 0 * (s(0) * z)
	s(0 + xts) * z = s(xts) * (s(0) * z)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	(((x * xts) + x) + x) * z = x * (s(s(xts)) * z)
	0 * z = 0 * (s(0) * z)
	s(0 + xts) * z = s(xts) * (s(0) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	(0 + x) * z -> x * (s(0) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
--- Primal Grammar:
	<empty>

+++ treating clause
	(((x * xts) + x) + x) * z = x * (s(s(xts)) * z)
+++ inductive narrowing on conjecture
	(((x * xts) + x) + x) * z = x * (s(s(xts)) * z)
... induction variables of
	(((x * xts) + x) + x) * z = x * (s(s(xts)) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	(((x * xts) + x) + x) * z = x * (s(s(xts)) * z)
... with variable xts
+++ creating new conjecture
	(((x * 0) + x) + x) * z = x * (s(s(0)) * z)
+++ creating new conjecture
	(((x * s(xts)) + x) + x) * z = x * (s(s(s(xts))) * z)
--- clause
	(((x * 0) + x) + x) * z = x * (s(s(0)) * z)
... reduced in 1 step to
	((0 + x) + x) * z = x * (s(s(0)) * z)
--- clause
	(((x * s(xts)) + x) + x) * z = x * (s(s(s(xts))) * z)
... reduced in 1 step to
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
+++ inductive narrowing succeeded
--- clause
	(((x * xts) + x) + x) * z = x * (s(s(xts)) * z)
... oriented to rule
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
+++ added new clause(s)
	((0 + x) + x) * z = x * (s(s(0)) * z)
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	0 * z = 0 * (s(0) * z)
	s(0 + xts) * z = s(xts) * (s(0) * z)
	((0 + x) + x) * z = x * (s(s(0)) * z)
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	(0 + x) * z -> x * (s(0) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
--- Primal Grammar:
	<empty>

+++ treating clause
	0 * z = 0 * (s(0) * z)
+++ inductive narrowing on conjecture
	0 * z = 0 * (s(0) * z)
... induction variables of
	0 * z = 0 * (s(0) * z)
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	0 * z = 0 * (s(0) * z)
... with variable z
+++ creating new conjecture
	0 * 0 = 0 * (s(0) * 0)
+++ creating new conjecture
	0 * s(xts) = 0 * (s(0) * s(xts))
--- clause
	0 * 0 = 0 * (s(0) * 0)
... reduced to tautology
	0 = 0
--- clause
	0 * s(xts) = 0 * (s(0) * s(xts))
... reduced in 7 steps to
	0 * xts = 0 * (s(0) * xts)
+++ inductive narrowing succeeded
--- clause
	0 * z = 0 * (s(0) * z)
... oriented to rule
	0 * (s(0) * z) -> 0 * z
+++ added new clause(s)
	0 * xts = 0 * (s(0) * xts)
... to conjectures
--- clause
	0 * xts = 0 * (s(0) * xts)
... reduced to tautology
	0 * xts = 0 * xts

+++ Status of the Inference System
--- Conjectures:
	s(0 + xts) * z = s(xts) * (s(0) * z)
	((0 + x) + x) * z = x * (s(s(0)) * z)
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	(0 + x) * z -> x * (s(0) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
--- Primal Grammar:
	<empty>

+++ treating clause
	s(0 + xts) * z = s(xts) * (s(0) * z)
+++ inductive narrowing on conjecture
	s(0 + xts) * z = s(xts) * (s(0) * z)
... induction variables of
	s(0 + xts) * z = s(xts) * (s(0) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(0 + xts) * z = s(xts) * (s(0) * z)
... with variable xts
+++ creating new conjecture
	s(0 + 0) * z = s(0) * (s(0) * z)
+++ creating new conjecture
	s(0 + s(xts)) * z = s(s(xts)) * (s(0) * z)
--- clause
	s(0 + 0) * z = s(0) * (s(0) * z)
... reduced in 1 step to
	s(0) * z = s(0) * (s(0) * z)
--- clause
	s(0 + s(xts)) * z = s(s(xts)) * (s(0) * z)
... reduced in 1 step to
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
+++ inductive narrowing succeeded
--- clause
	s(0 + xts) * z = s(xts) * (s(0) * z)
... oriented to rule
	s(0 + xts) * z -> s(xts) * (s(0) * z)
+++ added new clause(s)
	s(0) * z = s(0) * (s(0) * z)
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	((0 + x) + x) * z = x * (s(s(0)) * z)
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
	s(0) * z = s(0) * (s(0) * z)
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	(0 + x) * z -> x * (s(0) * z)
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
--- Primal Grammar:
	<empty>

+++ treating clause
	((0 + x) + x) * z = x * (s(s(0)) * z)
+++ inductive narrowing on conjecture
	((0 + x) + x) * z = x * (s(s(0)) * z)
... induction variables of
	((0 + x) + x) * z = x * (s(s(0)) * z)
... are:
	x:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	((0 + x) + x) * z = x * (s(s(0)) * z)
... with variable x
+++ creating new conjecture
	((0 + 0) + 0) * z = 0 * (s(s(0)) * z)
+++ creating new conjecture
	((0 + s(xts)) + s(xts)) * z = s(xts) * (s(s(0)) * z)
--- clause
	((0 + 0) + 0) * z = 0 * (s(s(0)) * z)
... reduced in 2 steps to
	0 * z = 0 * (s(s(0)) * z)
--- clause
	((0 + s(xts)) + s(xts)) * z = s(xts) * (s(s(0)) * z)
... reduced in 2 steps to
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
+++ inductive narrowing succeeded
--- clause
	((0 + x) + x) * z = x * (s(s(0)) * z)
... oriented to rule
	((0 + x) + x) * z -> x * (s(s(0)) * z)
+++ added new clause(s)
	0 * z = 0 * (s(s(0)) * z)
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
	s(0) * z = s(0) * (s(0) * z)
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
	0 * z = 0 * (s(s(0)) * z)
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	(0 + x) * z -> x * (s(0) * z)
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
--- Primal Grammar:
	<empty>

+++ treating clause
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
+++ inductive narrowing on conjecture
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
... induction variables of
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
... with variable xts
+++ creating new conjecture
	((((x * 0) + x) + x) + x) * z = x * (s(s(s(0))) * z)
+++ creating new conjecture
	((((x * s(xts)) + x) + x) + x) * z = x * (s(s(s(s(xts)))) * z)
--- clause
	((((x * 0) + x) + x) + x) * z = x * (s(s(s(0))) * z)
... reduced in 1 step to
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
--- clause
	((((x * s(xts)) + x) + x) + x) * z = x * (s(s(s(s(xts)))) * z)
... reduced in 1 step to
	(((((x * xts) + x) + x) + x) + x) * z = x * (s(s(s(s(xts)))) * z)
+++ inductive narrowing succeeded
--- clause
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
... oriented to rule
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
+++ added new clause(s)
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
	(((((x * xts) + x) + x) + x) + x) * z = x * (s(s(s(s(xts)))) * z)
... to conjectures
+++ active wrap
	(. + x) * z = x * (s(.) * z)
... with sequence
	((x * xts) + x) * z = x * (s(xts) * z)
	(((x * xts) + x) + x) * z = x * (s(s(xts)) * z)
	((((x * xts) + x) + x) + x) * z = x * (s(s(s(xts))) * z)
+++ primal grammar found for head
	{*, +, s}
... and wrap
	(. + x) * z = x * (s(.) * z)
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
--- clause
	(((((x * xts) + x) + x) + x) + x) * z = x * (s(s(s(s(xts)))) * z)
... subsumed by lemma
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(0) * z = s(0) * (s(0) * z)
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
	0 * z = 0 * (s(s(0)) * z)
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	(0 + x) * z -> x * (s(0) * z)
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)

+++ treating clause
	s(0) * z = s(0) * (s(0) * z)
+++ inductive narrowing on conjecture
	s(0) * z = s(0) * (s(0) * z)
... induction variables of
	s(0) * z = s(0) * (s(0) * z)
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(0) * z = s(0) * (s(0) * z)
... with variable z
+++ creating new conjecture
	s(0) * 0 = s(0) * (s(0) * 0)
+++ creating new conjecture
	s(0) * s(xts) = s(0) * (s(0) * s(xts))
--- clause
	s(0) * 0 = s(0) * (s(0) * 0)
... reduced to tautology
	0 = 0
--- clause
	s(0) * s(xts) = s(0) * (s(0) * s(xts))
... reduced in 9 steps to
	s(s(0) * xts) = s(s(0) * (s(0) * xts))
... decomposed into new clause(s)
	s(0) * xts = s(0) * (s(0) * xts)
+++ inductive narrowing succeeded
--- clause
	s(0) * z = s(0) * (s(0) * z)
... oriented to rule
	s(0) * (s(0) * z) -> s(0) * z
+++ added new clause(s)
	s(0) * xts = s(0) * (s(0) * xts)
... to conjectures
--- clause
	s(0) * xts = s(0) * (s(0) * xts)
... reduced to tautology
	s(0) * xts = s(0) * xts

+++ Status of the Inference System
--- Conjectures:
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
	0 * z = 0 * (s(s(0)) * z)
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	(0 + x) * z -> x * (s(0) * z)
	s(0) * (s(0) * z) -> s(0) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)

+++ treating clause
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
+++ inductive narrowing on conjecture
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
... induction variables of
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
... with variable xts
+++ creating new conjecture
	s(s(0 + 0)) * z = s(s(0)) * (s(0) * z)
+++ creating new conjecture
	s(s(0 + s(xts))) * z = s(s(s(xts))) * (s(0) * z)
--- clause
	s(s(0 + 0)) * z = s(s(0)) * (s(0) * z)
... reduced in 1 step to
	s(s(0)) * z = s(s(0)) * (s(0) * z)
--- clause
	s(s(0 + s(xts))) * z = s(s(s(xts))) * (s(0) * z)
... reduced in 1 step to
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
+++ inductive narrowing succeeded
--- clause
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
... oriented to rule
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
+++ added new clause(s)
	s(s(0)) * z = s(s(0)) * (s(0) * z)
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	0 * z = 0 * (s(s(0)) * z)
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
	s(s(0)) * z = s(s(0)) * (s(0) * z)
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	(0 + x) * z -> x * (s(0) * z)
	s(0) * (s(0) * z) -> s(0) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)

+++ treating clause
	0 * z = 0 * (s(s(0)) * z)
+++ inductive narrowing on conjecture
	0 * z = 0 * (s(s(0)) * z)
... induction variables of
	0 * z = 0 * (s(s(0)) * z)
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	0 * z = 0 * (s(s(0)) * z)
... with variable z
+++ creating new conjecture
	0 * 0 = 0 * (s(s(0)) * 0)
+++ creating new conjecture
	0 * s(xts) = 0 * (s(s(0)) * s(xts))
--- clause
	0 * 0 = 0 * (s(s(0)) * 0)
... reduced to tautology
	0 = 0
--- clause
	0 * s(xts) = 0 * (s(s(0)) * s(xts))
... reduced in 10 steps to
	0 * xts = 0 * (s(s(0)) * xts)
+++ inductive narrowing succeeded
--- clause
	0 * z = 0 * (s(s(0)) * z)
... oriented to rule
	0 * (s(s(0)) * z) -> 0 * z
+++ added new clause(s)
	0 * xts = 0 * (s(s(0)) * xts)
... to conjectures
--- clause
	0 * xts = 0 * (s(s(0)) * xts)
... reduced to tautology
	0 * xts = 0 * xts

+++ Status of the Inference System
--- Conjectures:
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
	s(s(0)) * z = s(s(0)) * (s(0) * z)
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	s(0) * (s(0) * z) -> s(0) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)

+++ treating clause
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
+++ inductive narrowing on conjecture
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
... induction variables of
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
... with variable xts
+++ creating new conjecture
	s(s(0 + 0) + 0) * z = s(0) * (s(s(0)) * z)
+++ creating new conjecture
	s(s(0 + s(xts)) + s(xts)) * z = s(s(xts)) * (s(s(0)) * z)
--- clause
	s(s(0 + 0) + 0) * z = s(0) * (s(s(0)) * z)
... reduced in 2 steps to
	s(s(0)) * z = s(0) * (s(s(0)) * z)
--- clause
	s(s(0 + s(xts)) + s(xts)) * z = s(s(xts)) * (s(s(0)) * z)
... reduced in 2 steps to
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
+++ inductive narrowing succeeded
--- clause
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
... oriented to rule
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
+++ added new clause(s)
	s(s(0)) * z = s(0) * (s(s(0)) * z)
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
	s(s(0)) * z = s(s(0)) * (s(0) * z)
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
	s(s(0)) * z = s(0) * (s(s(0)) * z)
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	s(0) * (s(0) * z) -> s(0) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)

+++ treating clause
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
+++ inductive narrowing on conjecture
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
... induction variables of
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
... are:
	x:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
... with variable x
+++ creating new conjecture
	(((0 + 0) + 0) + 0) * z = 0 * (s(s(s(0))) * z)
+++ creating new conjecture
	(((0 + s(xts)) + s(xts)) + s(xts)) * z = s(xts) * (s(s(s(0))) * z)
--- clause
	(((0 + 0) + 0) + 0) * z = 0 * (s(s(s(0))) * z)
... reduced in 3 steps to
	0 * z = 0 * (s(s(s(0))) * z)
--- clause
	(((0 + s(xts)) + s(xts)) + s(xts)) * z = s(xts) * (s(s(s(0))) * z)
... reduced in 3 steps to
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
+++ inductive narrowing succeeded
--- clause
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
... oriented to rule
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
+++ added new clause(s)
	0 * z = 0 * (s(s(s(0))) * z)
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
... to conjectures
+++ active wrap
	(. + x) * z = x * (s(.) * z)
... with sequence
	(0 + x) * z = x * (s(0) * z)
	((0 + x) + x) * z = x * (s(s(0)) * z)
	(((0 + x) + x) + x) * z = x * (s(s(s(0))) * z)
+++ primal grammar found for head
	{*, +, 0, s}
... and wrap
	(. + x) * z = x * (s(.) * z)
+++ Presburger system  = {
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
+++ }
+++ Lemma(s)           = 
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)

+++ Status of the Inference System
--- Conjectures:
	s(s(0)) * z = s(s(0)) * (s(0) * z)
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
	s(s(0)) * z = s(0) * (s(s(0)) * z)
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
	0 * z = 0 * (s(s(s(0))) * z)
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	s(0) * (s(0) * z) -> s(0) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)

+++ treating clause
	s(s(0)) * z = s(s(0)) * (s(0) * z)
+++ inductive narrowing on conjecture
	s(s(0)) * z = s(s(0)) * (s(0) * z)
... induction variables of
	s(s(0)) * z = s(s(0)) * (s(0) * z)
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(0)) * z = s(s(0)) * (s(0) * z)
... with variable z
+++ creating new conjecture
	s(s(0)) * 0 = s(s(0)) * (s(0) * 0)
+++ creating new conjecture
	s(s(0)) * s(xts) = s(s(0)) * (s(0) * s(xts))
--- clause
	s(s(0)) * 0 = s(s(0)) * (s(0) * 0)
... reduced to tautology
	0 = 0
--- clause
	s(s(0)) * s(xts) = s(s(0)) * (s(0) * s(xts))
... reduced in 11 steps to
	s(s(s(s(0)) * xts)) = s(s(s(s(0)) * (s(0) * xts)))
... decomposed into new clause(s)
	s(s(0)) * xts = s(s(0)) * (s(0) * xts)
+++ inductive narrowing succeeded
--- clause
	s(s(0)) * z = s(s(0)) * (s(0) * z)
... oriented to rule
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
+++ added new clause(s)
	s(s(0)) * xts = s(s(0)) * (s(0) * xts)
... to conjectures
--- clause
	s(s(0)) * xts = s(s(0)) * (s(0) * xts)
... reduced to tautology
	s(s(0)) * xts = s(s(0)) * xts
+++ active wrap
	. * z = . * (s(0) * z)
... with sequence
	0 * z = 0 * (s(0) * z)
	s(0) * z = s(0) * (s(0) * z)
	s(s(0)) * z = s(s(0)) * (s(0) * z)
+++ primal grammar found for head
	{*, 0, s}
... and wrap
	. * z = . * (s(0) * z)
+++ Presburger system  = {
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
+++ }
+++ Lemma(s)           = 
	^f4($n) * z = ^f4($n) * (s(0) * z)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
	s(s(0)) * z = s(0) * (s(s(0)) * z)
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
	0 * z = 0 * (s(s(s(0))) * z)
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	s(0) * (s(0) * z) -> s(0) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)

+++ treating clause
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
+++ inductive narrowing on conjecture
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
... induction variables of
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
... with variable xts
+++ creating new conjecture
	s(s(s(0 + 0))) * z = s(s(s(0))) * (s(0) * z)
+++ creating new conjecture
	s(s(s(0 + s(xts)))) * z = s(s(s(s(xts)))) * (s(0) * z)
--- clause
	s(s(s(0 + 0))) * z = s(s(s(0))) * (s(0) * z)
... reduced in 1 step to
	s(s(s(0))) * z = s(s(s(0))) * (s(0) * z)
--- clause
	s(s(s(0 + s(xts)))) * z = s(s(s(s(xts)))) * (s(0) * z)
... reduced in 1 step to
	s(s(s(s(0 + xts)))) * z = s(s(s(s(xts)))) * (s(0) * z)
--- clause
	s(s(s(0))) * z = s(s(s(0))) * (s(0) * z)
... subsumed by lemma
	^f4($n) * z = ^f4($n) * (s(0) * z)
... with substitution
	$n <- 3
+++ inductive narrowing succeeded
--- clause
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
... oriented to rule
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
+++ added new clause(s)
	s(s(s(s(0 + xts)))) * z = s(s(s(s(xts)))) * (s(0) * z)
... to conjectures
+++ active wrap
	. * z = . * (s(0) * z)
... with sequence
	s(0 + xts) * z = s(xts) * (s(0) * z)
	s(s(0 + xts)) * z = s(s(xts)) * (s(0) * z)
	s(s(s(0 + xts))) * z = s(s(s(xts))) * (s(0) * z)
+++ primal grammar found for head
	{*, +, 0, s}
... and wrap
	. * z = . * (s(0) * z)
+++ Presburger system  = {
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)
--- clause
	s(s(s(s(0 + xts)))) * z = s(s(s(s(xts)))) * (s(0) * z)
... subsumed by lemma
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(s(0)) * z = s(0) * (s(s(0)) * z)
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
	0 * z = 0 * (s(s(s(0))) * z)
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	s(0) * (s(0) * z) -> s(0) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)

+++ treating clause
	s(s(0)) * z = s(0) * (s(s(0)) * z)
+++ inductive narrowing on conjecture
	s(s(0)) * z = s(0) * (s(s(0)) * z)
... induction variables of
	s(s(0)) * z = s(0) * (s(s(0)) * z)
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(0)) * z = s(0) * (s(s(0)) * z)
... with variable z
+++ creating new conjecture
	s(s(0)) * 0 = s(0) * (s(s(0)) * 0)
+++ creating new conjecture
	s(s(0)) * s(xts) = s(0) * (s(s(0)) * s(xts))
--- clause
	s(s(0)) * 0 = s(0) * (s(s(0)) * 0)
... reduced to tautology
	0 = 0
--- clause
	s(s(0)) * s(xts) = s(0) * (s(s(0)) * s(xts))
... reduced in 14 steps to
	s(s(s(s(0)) * xts)) = s(s(s(0) * (s(s(0)) * xts)))
... decomposed into new clause(s)
	s(s(0)) * xts = s(0) * (s(s(0)) * xts)
+++ inductive narrowing succeeded
--- clause
	s(s(0)) * z = s(0) * (s(s(0)) * z)
... oriented to rule
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
+++ added new clause(s)
	s(s(0)) * xts = s(0) * (s(s(0)) * xts)
... to conjectures
--- clause
	s(s(0)) * xts = s(0) * (s(s(0)) * xts)
... reduced to tautology
	s(s(0)) * xts = s(s(0)) * xts

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
	0 * z = 0 * (s(s(s(0))) * z)
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	s(0) * (s(0) * z) -> s(0) * z
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)

+++ treating clause
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
+++ inductive narrowing on conjecture
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
... induction variables of
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
... with variable xts
+++ creating new conjecture
	s(s(s(s(0 + 0)) + 0)) * z = s(s(0)) * (s(s(0)) * z)
+++ creating new conjecture
	s(s(s(s(0 + s(xts))) + s(xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
--- clause
	s(s(s(s(0 + 0)) + 0)) * z = s(s(0)) * (s(s(0)) * z)
... reduced in 2 steps to
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
--- clause
	s(s(s(s(0 + s(xts))) + s(xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
... reduced in 2 steps to
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
... oriented to rule
	s(s(s(s(0 + xts)) + xts)) * z -> s(s(xts)) * (s(s(0)) * z)
+++ added new clause(s)
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	0 * z = 0 * (s(s(s(0))) * z)
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	s(0) * (s(0) * z) -> s(0) * z
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
	s(s(s(s(0 + xts)) + xts)) * z -> s(s(xts)) * (s(s(0)) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)

+++ treating clause
	0 * z = 0 * (s(s(s(0))) * z)
+++ inductive narrowing on conjecture
	0 * z = 0 * (s(s(s(0))) * z)
... induction variables of
	0 * z = 0 * (s(s(s(0))) * z)
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	0 * z = 0 * (s(s(s(0))) * z)
... with variable z
+++ creating new conjecture
	0 * 0 = 0 * (s(s(s(0))) * 0)
+++ creating new conjecture
	0 * s(xts) = 0 * (s(s(s(0))) * s(xts))
--- clause
	0 * 0 = 0 * (s(s(s(0))) * 0)
... reduced to tautology
	0 = 0
--- clause
	0 * s(xts) = 0 * (s(s(s(0))) * s(xts))
... reduced in 13 steps to
	0 * xts = 0 * (s(s(s(0))) * xts)
+++ inductive narrowing succeeded
--- clause
	0 * z = 0 * (s(s(s(0))) * z)
... oriented to rule
	0 * (s(s(s(0))) * z) -> 0 * z
+++ added new clause(s)
	0 * xts = 0 * (s(s(s(0))) * xts)
... to conjectures
--- clause
	0 * xts = 0 * (s(s(s(0))) * xts)
... reduced to tautology
	0 * xts = 0 * xts
+++ active wrap
	0 * z = 0 * (s(.) * z)
... with sequence
	0 * z = 0 * (s(0) * z)
	0 * z = 0 * (s(s(0)) * z)
	0 * z = 0 * (s(s(s(0))) * z)
+++ primal grammar found for head
	{*, 0, s}
... and wrap
	0 * z = 0 * (s(.) * z)
+++ Presburger system  = {
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
+++ }
+++ Lemma(s)           = 
	0 * z = 0 * (s(^f4($n)) * z)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	0 * (s(s(s(0))) * z) -> 0 * z
	s(0) * (s(0) * z) -> s(0) * z
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
	s(s(s(s(0 + xts)) + xts)) * z -> s(s(xts)) * (s(s(0)) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)
	0 * z = 0 * (s(^f4($n)) * z)

+++ treating clause
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
+++ inductive narrowing on conjecture
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
... induction variables of
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
... with variable xts
+++ creating new conjecture
	s(s(s(0 + 0) + 0) + 0) * z = s(0) * (s(s(s(0))) * z)
+++ creating new conjecture
	s(s(s(0 + s(xts)) + s(xts)) + s(xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
--- clause
	s(s(s(0 + 0) + 0) + 0) * z = s(0) * (s(s(s(0))) * z)
... reduced in 3 steps to
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
--- clause
	s(s(s(0 + s(xts)) + s(xts)) + s(xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
... reduced in 3 steps to
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
+++ inductive narrowing succeeded
--- clause
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
... oriented to rule
	s(s(s(0 + xts) + xts) + xts) * z -> s(xts) * (s(s(s(0))) * z)
+++ added new clause(s)
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
... to conjectures
+++ active wrap
	s(. + xts) * z = s(xts) * (s(.) * z)
... with sequence
	s(0 + xts) * z = s(xts) * (s(0) * z)
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
+++ primal grammar found for head
	{*, +, 0, s}
... and wrap
	s(. + xts) * z = s(xts) * (s(.) * z)
+++ Presburger system  = {
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f9(0; xts) -> 0
	^f9($n9 + 1; xts) -> s(^f9($n9; xts) + xts)
+++ }
+++ Lemma(s)           = 
	s(^f9($n; xts) + xts) * z = s(xts) * (s(^f4($n)) * z)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	0 * (s(s(s(0))) * z) -> 0 * z
	s(0) * (s(0) * z) -> s(0) * z
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
	s(s(s(s(0 + xts)) + xts)) * z -> s(s(xts)) * (s(s(0)) * z)
	s(s(s(0 + xts) + xts) + xts) * z -> s(xts) * (s(s(s(0))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0; xts) -> 0
	^f9($n9 + 1; xts) -> s(^f9($n9; xts) + xts)
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)
	0 * z = 0 * (s(^f4($n)) * z)
	s(^f9($n; xts) + xts) * z = s(xts) * (s(^f4($n)) * z)

+++ treating clause
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
+++ inductive narrowing on conjecture
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
... induction variables of
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
... with variable z
+++ creating new conjecture
	s(s(s(s(0)))) * 0 = s(s(0)) * (s(s(0)) * 0)
+++ creating new conjecture
	s(s(s(s(0)))) * s(xts) = s(s(0)) * (s(s(0)) * s(xts))
--- clause
	s(s(s(s(0)))) * 0 = s(s(0)) * (s(s(0)) * 0)
... reduced to tautology
	0 = 0
--- clause
	s(s(s(s(0)))) * s(xts) = s(s(0)) * (s(s(0)) * s(xts))
... reduced in 18 steps to
	s(s(s(s(s(s(s(s(0)))) * xts)))) = s(s(s(s(s(s(0)) * (s(s(0)) * xts)))))
... decomposed into new clause(s)
	s(s(s(s(0)))) * xts = s(s(0)) * (s(s(0)) * xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
... oriented to rule
	s(s(s(s(0)))) * z -> s(s(0)) * (s(s(0)) * z)
+++ added new clause(s)
	s(s(s(s(0)))) * xts = s(s(0)) * (s(s(0)) * xts)
... to conjectures
--- clause
	s(s(s(s(0)))) * xts = s(s(0)) * (s(s(0)) * xts)
... reduced to tautology
	s(s(0)) * (s(s(0)) * xts) = s(s(0)) * (s(s(0)) * xts)
+++ active wrap
	. * z = . * (s(s(0)) * z)
... with sequence
	0 * z = 0 * (s(s(0)) * z)
	s(s(0)) * z = s(0) * (s(s(0)) * z)
	s(s(s(s(0)))) * z = s(s(0)) * (s(s(0)) * z)
+++ primal grammar found for head
	{*, 0, s}
... and wrap
	. * z = . * (s(s(0)) * z)
+++ Presburger system  = {
	^f10(0) -> 0
	^f10($n10 + 1) -> s(s(^f10($n10)))
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
+++ }
+++ Lemma(s)           = 
	^f10($n) * z = ^f4($n) * (s(s(0)) * z)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	0 * (s(s(s(0))) * z) -> 0 * z
	s(0) * (s(0) * z) -> s(0) * z
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	s(s(s(s(0)))) * z -> s(s(0)) * (s(s(0)) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
	s(s(s(s(0 + xts)) + xts)) * z -> s(s(xts)) * (s(s(0)) * z)
	s(s(s(0 + xts) + xts) + xts) * z -> s(xts) * (s(s(s(0))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f10(0) -> 0
	^f10($n10 + 1) -> s(s(^f10($n10)))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0; xts) -> 0
	^f9($n9 + 1; xts) -> s(^f9($n9; xts) + xts)
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)
	0 * z = 0 * (s(^f4($n)) * z)
	s(^f9($n; xts) + xts) * z = s(xts) * (s(^f4($n)) * z)
	^f10($n) * z = ^f4($n) * (s(s(0)) * z)

+++ treating clause
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
... induction variables of
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(0 + 0))) + 0))) * z = s(s(s(0))) * (s(s(0)) * z)
+++ creating new conjecture
	s(s(s(s(s(s(0 + s(xts)))) + s(xts)))) * z = s(s(s(s(xts)))) * (s(s(0)) * z)
--- clause
	s(s(s(s(s(s(0 + 0))) + 0))) * z = s(s(s(0))) * (s(s(0)) * z)
... reduced in 2 steps to
	s(s(s(s(s(s(0)))))) * z = s(s(s(0))) * (s(s(0)) * z)
--- clause
	s(s(s(s(s(s(0 + s(xts)))) + s(xts)))) * z = s(s(s(s(xts)))) * (s(s(0)) * z)
... reduced in 2 steps to
	s(s(s(s(s(s(s(s(0 + xts)))) + xts)))) * z = s(s(s(s(xts)))) * (s(s(0)) * z)
--- clause
	s(s(s(s(s(s(0)))))) * z = s(s(s(0))) * (s(s(0)) * z)
... subsumed by lemma
	^f10($n) * z = ^f4($n) * (s(s(0)) * z)
... with substitution
	$n <- 3
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
... oriented to rule
	s(s(s(s(s(s(0 + xts))) + xts))) * z -> s(s(s(xts))) * (s(s(0)) * z)
+++ added new clause(s)
	s(s(s(s(s(s(s(s(0 + xts)))) + xts)))) * z = s(s(s(s(xts)))) * (s(s(0)) * z)
... to conjectures
+++ active wrap
	. * z = . * (s(s(0)) * z)
... with sequence
	s(s(0 + xts) + xts) * z = s(xts) * (s(s(0)) * z)
	s(s(s(s(0 + xts)) + xts)) * z = s(s(xts)) * (s(s(0)) * z)
	s(s(s(s(s(s(0 + xts))) + xts))) * z = s(s(s(xts))) * (s(s(0)) * z)
+++ primal grammar found for head
	{*, +, 0, s}
... and wrap
	. * z = . * (s(s(0)) * z)
+++ Presburger system  = {
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f11(0, $n5; xts) -> s(^f5($n5; xts)) + xts
	^f11($n11 + 1, $n5; xts) -> s(^f11($n11, $n5 + 1; xts))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	s(^f11($n, 0; xts)) * z = s(^f1($n; xts)) * (s(s(0)) * z)
--- clause
	s(s(s(s(s(s(s(s(0 + xts)))) + xts)))) * z = s(s(s(s(xts)))) * (s(s(0)) * z)
... subsumed by lemma
	s(^f11($n, 0; xts)) * z = s(^f1($n; xts)) * (s(s(0)) * z)
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	0 * (s(s(s(0))) * z) -> 0 * z
	s(0) * (s(0) * z) -> s(0) * z
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	s(s(s(s(0)))) * z -> s(s(0)) * (s(s(0)) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
	s(s(s(s(0 + xts)) + xts)) * z -> s(s(xts)) * (s(s(0)) * z)
	s(s(s(0 + xts) + xts) + xts) * z -> s(xts) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0 + xts))) + xts))) * z -> s(s(s(xts))) * (s(s(0)) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f10(0) -> 0
	^f10($n10 + 1) -> s(s(^f10($n10)))
	^f11(0, $n5; xts) -> s(^f5($n5; xts)) + xts
	^f11($n11 + 1, $n5; xts) -> s(^f11($n11, $n5 + 1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0; xts) -> 0
	^f9($n9 + 1; xts) -> s(^f9($n9; xts) + xts)
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)
	0 * z = 0 * (s(^f4($n)) * z)
	s(^f9($n; xts) + xts) * z = s(xts) * (s(^f4($n)) * z)
	^f10($n) * z = ^f4($n) * (s(s(0)) * z)
	s(^f11($n, 0; xts)) * z = s(^f1($n; xts)) * (s(s(0)) * z)

+++ treating clause
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
+++ inductive narrowing on conjecture
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
... induction variables of
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
... with variable z
+++ creating new conjecture
	s(s(s(0))) * 0 = s(0) * (s(s(s(0))) * 0)
+++ creating new conjecture
	s(s(s(0))) * s(xts) = s(0) * (s(s(s(0))) * s(xts))
--- clause
	s(s(s(0))) * 0 = s(0) * (s(s(s(0))) * 0)
... reduced to tautology
	0 = 0
--- clause
	s(s(s(0))) * s(xts) = s(0) * (s(s(s(0))) * s(xts))
... reduced in 19 steps to
	s(s(s(s(s(s(0))) * xts))) = s(s(s(s(0) * (s(s(s(0))) * xts))))
... decomposed into new clause(s)
	s(s(s(0))) * xts = s(0) * (s(s(s(0))) * xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
... oriented to rule
	s(0) * (s(s(s(0))) * z) -> s(s(s(0))) * z
+++ added new clause(s)
	s(s(s(0))) * xts = s(0) * (s(s(s(0))) * xts)
... to conjectures
--- clause
	s(s(s(0))) * xts = s(0) * (s(s(s(0))) * xts)
... reduced to tautology
	s(s(s(0))) * xts = s(s(s(0))) * xts

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	0 * (s(s(s(0))) * z) -> 0 * z
	s(0) * (s(0) * z) -> s(0) * z
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(0) * (s(s(s(0))) * z) -> s(s(s(0))) * z
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	s(s(s(s(0)))) * z -> s(s(0)) * (s(s(0)) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
	s(s(s(s(0 + xts)) + xts)) * z -> s(s(xts)) * (s(s(0)) * z)
	s(s(s(0 + xts) + xts) + xts) * z -> s(xts) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0 + xts))) + xts))) * z -> s(s(s(xts))) * (s(s(0)) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f10(0) -> 0
	^f10($n10 + 1) -> s(s(^f10($n10)))
	^f11(0, $n5; xts) -> s(^f5($n5; xts)) + xts
	^f11($n11 + 1, $n5; xts) -> s(^f11($n11, $n5 + 1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0; xts) -> 0
	^f9($n9 + 1; xts) -> s(^f9($n9; xts) + xts)
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)
	0 * z = 0 * (s(^f4($n)) * z)
	s(^f9($n; xts) + xts) * z = s(xts) * (s(^f4($n)) * z)
	^f10($n) * z = ^f4($n) * (s(s(0)) * z)
	s(^f11($n, 0; xts)) * z = s(^f1($n; xts)) * (s(s(0)) * z)

+++ treating clause
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
... induction variables of
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(0 + 0)) + 0)) + 0)) * z = s(s(0)) * (s(s(s(0))) * z)
+++ creating new conjecture
	s(s(s(s(s(s(0 + s(xts))) + s(xts))) + s(xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
--- clause
	s(s(s(s(s(s(0 + 0)) + 0)) + 0)) * z = s(s(0)) * (s(s(s(0))) * z)
... reduced in 3 steps to
	s(s(s(s(s(s(0)))))) * z = s(s(0)) * (s(s(s(0))) * z)
--- clause
	s(s(s(s(s(s(0 + s(xts))) + s(xts))) + s(xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
... oriented to rule
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z -> s(s(xts)) * (s(s(s(0))) * z)
+++ added new clause(s)
	s(s(s(s(s(s(0)))))) * z = s(s(0)) * (s(s(s(0))) * z)
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(0)))))) * z = s(s(0)) * (s(s(s(0))) * z)
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	0 * (s(s(s(0))) * z) -> 0 * z
	s(0) * (s(0) * z) -> s(0) * z
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(0) * (s(s(s(0))) * z) -> s(s(s(0))) * z
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	s(s(s(s(0)))) * z -> s(s(0)) * (s(s(0)) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
	s(s(s(s(0 + xts)) + xts)) * z -> s(s(xts)) * (s(s(0)) * z)
	s(s(s(0 + xts) + xts) + xts) * z -> s(xts) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0 + xts))) + xts))) * z -> s(s(s(xts))) * (s(s(0)) * z)
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z -> s(s(xts)) * (s(s(s(0))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f10(0) -> 0
	^f10($n10 + 1) -> s(s(^f10($n10)))
	^f11(0, $n5; xts) -> s(^f5($n5; xts)) + xts
	^f11($n11 + 1, $n5; xts) -> s(^f11($n11, $n5 + 1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0; xts) -> 0
	^f9($n9 + 1; xts) -> s(^f9($n9; xts) + xts)
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)
	0 * z = 0 * (s(^f4($n)) * z)
	s(^f9($n; xts) + xts) * z = s(xts) * (s(^f4($n)) * z)
	^f10($n) * z = ^f4($n) * (s(s(0)) * z)
	s(^f11($n, 0; xts)) * z = s(^f1($n; xts)) * (s(s(0)) * z)

+++ treating clause
	s(s(s(s(s(s(0)))))) * z = s(s(0)) * (s(s(s(0))) * z)
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(0)))))) * z = s(s(0)) * (s(s(s(0))) * z)
... induction variables of
	s(s(s(s(s(s(0)))))) * z = s(s(0)) * (s(s(s(0))) * z)
... are:
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(0)))))) * z = s(s(0)) * (s(s(s(0))) * z)
... with variable z
+++ creating new conjecture
	s(s(s(s(s(s(0)))))) * 0 = s(s(0)) * (s(s(s(0))) * 0)
+++ creating new conjecture
	s(s(s(s(s(s(0)))))) * s(xts) = s(s(0)) * (s(s(s(0))) * s(xts))
--- clause
	s(s(s(s(s(s(0)))))) * 0 = s(s(0)) * (s(s(s(0))) * 0)
... reduced to tautology
	0 = 0
--- clause
	s(s(s(s(s(s(0)))))) * s(xts) = s(s(0)) * (s(s(s(0))) * s(xts))
... reduced in 25 steps to
	s(s(s(s(s(s(s(s(s(s(s(s(0)))))) * xts)))))) = s(s(s(s(s(s(s(s(0)) * (s(s(s(0))) * xts)))))))
... decomposed into new clause(s)
	s(s(s(s(s(s(0)))))) * xts = s(s(0)) * (s(s(s(0))) * xts)
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(0)))))) * z = s(s(0)) * (s(s(s(0))) * z)
... oriented to rule
	s(s(s(s(s(s(0)))))) * z -> s(s(0)) * (s(s(s(0))) * z)
+++ added new clause(s)
	s(s(s(s(s(s(0)))))) * xts = s(s(0)) * (s(s(s(0))) * xts)
... to conjectures
--- clause
	s(s(s(s(s(s(0)))))) * xts = s(s(0)) * (s(s(s(0))) * xts)
... reduced to tautology
	s(s(0)) * (s(s(s(0))) * xts) = s(s(0)) * (s(s(s(0))) * xts)
+++ active wrap
	. * z = . * (s(s(s(0))) * z)
... with sequence
	0 * z = 0 * (s(s(s(0))) * z)
	s(s(s(0))) * z = s(0) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0)))))) * z = s(s(0)) * (s(s(s(0))) * z)
+++ primal grammar found for head
	{*, 0, s}
... and wrap
	. * z = . * (s(s(s(0))) * z)
+++ Presburger system  = {
	^f13(0) -> 0
	^f13($n13 + 1) -> s(s(s(^f13($n13))))
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
+++ }
+++ Lemma(s)           = 
	^f13($n) * z = ^f4($n) * (s(s(s(0))) * z)

+++ Status of the Inference System
--- Conjectures:
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	0 * (s(s(s(0))) * z) -> 0 * z
	s(0) * (s(0) * z) -> s(0) * z
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(0) * (s(s(s(0))) * z) -> s(s(s(0))) * z
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	s(s(s(s(0)))) * z -> s(s(0)) * (s(s(0)) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	s(s(s(s(s(s(0)))))) * z -> s(s(0)) * (s(s(s(0))) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
	s(s(s(s(0 + xts)) + xts)) * z -> s(s(xts)) * (s(s(0)) * z)
	s(s(s(0 + xts) + xts) + xts) * z -> s(xts) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0 + xts))) + xts))) * z -> s(s(s(xts))) * (s(s(0)) * z)
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z -> s(s(xts)) * (s(s(s(0))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f10(0) -> 0
	^f10($n10 + 1) -> s(s(^f10($n10)))
	^f11(0, $n5; xts) -> s(^f5($n5; xts)) + xts
	^f11($n11 + 1, $n5; xts) -> s(^f11($n11, $n5 + 1; xts))
	^f13(0) -> 0
	^f13($n13 + 1) -> s(s(s(^f13($n13))))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0; xts) -> 0
	^f9($n9 + 1; xts) -> s(^f9($n9; xts) + xts)
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)
	0 * z = 0 * (s(^f4($n)) * z)
	s(^f9($n; xts) + xts) * z = s(xts) * (s(^f4($n)) * z)
	^f10($n) * z = ^f4($n) * (s(s(0)) * z)
	s(^f11($n, 0; xts)) * z = s(^f1($n; xts)) * (s(s(0)) * z)
	^f13($n) * z = ^f4($n) * (s(s(s(0))) * z)

+++ treating clause
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
+++ inductive narrowing on conjecture
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
... induction variables of
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
... are:
	xts:nat
	z:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
... with variable xts
+++ creating new conjecture
	s(s(s(s(s(s(s(s(s(0 + 0))) + 0))) + 0))) * z = s(s(s(0))) * (s(s(s(0))) * z)
+++ creating new conjecture
	s(s(s(s(s(s(s(s(s(0 + s(xts)))) + s(xts)))) + s(xts)))) * z = s(s(s(s(xts)))) * (s(s(s(0))) * z)
--- clause
	s(s(s(s(s(s(s(s(s(0 + 0))) + 0))) + 0))) * z = s(s(s(0))) * (s(s(s(0))) * z)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(0))))))))) * z = s(s(s(0))) * (s(s(s(0))) * z)
--- clause
	s(s(s(s(s(s(s(s(s(0 + s(xts)))) + s(xts)))) + s(xts)))) * z = s(s(s(s(xts)))) * (s(s(s(0))) * z)
... reduced in 3 steps to
	s(s(s(s(s(s(s(s(s(s(s(s(0 + xts)))) + xts)))) + xts)))) * z = s(s(s(s(xts)))) * (s(s(s(0))) * z)
--- clause
	s(s(s(s(s(s(s(s(s(0))))))))) * z = s(s(s(0))) * (s(s(s(0))) * z)
... subsumed by lemma
	^f13($n) * z = ^f4($n) * (s(s(s(0))) * z)
... with substitution
	$n <- 3
+++ inductive narrowing succeeded
--- clause
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
... oriented to rule
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z -> s(s(s(xts))) * (s(s(s(0))) * z)
+++ added new clause(s)
	s(s(s(s(s(s(s(s(s(s(s(s(0 + xts)))) + xts)))) + xts)))) * z = s(s(s(s(xts)))) * (s(s(s(0))) * z)
... to conjectures
+++ active wrap
	. * z = . * (s(s(s(0))) * z)
... with sequence
	s(s(s(0 + xts) + xts) + xts) * z = s(xts) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z = s(s(xts)) * (s(s(s(0))) * z)
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z = s(s(s(xts))) * (s(s(s(0))) * z)
+++ primal grammar found for head
	{*, +, 0, s}
... and wrap
	. * z = . * (s(s(s(0))) * z)
+++ Presburger system  = {
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f11(0, $n5; xts) -> s(^f5($n5; xts)) + xts
	^f11($n11 + 1, $n5; xts) -> s(^f11($n11, $n5 + 1; xts))
	^f14(0, $n11; xts) -> s(^f11($n11, 0; xts)) + xts
	^f14($n14 + 1, $n11; xts) -> s(^f14($n14, $n11 + 1; xts))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
+++ }
+++ Lemma(s)           = 
	s(^f14($n, 0; xts)) * z = s(^f1($n; xts)) * (s(s(s(0))) * z)
--- clause
	s(s(s(s(s(s(s(s(s(s(s(s(0 + xts)))) + xts)))) + xts)))) * z = s(s(s(s(xts)))) * (s(s(s(0))) * z)
... subsumed by lemma
	s(^f14($n, 0; xts)) * z = s(^f1($n; xts)) * (s(s(s(0))) * z)
... with substitution
	$n <- 3

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	x * (0 * z) -> 0 * z
	0 * (s(0) * z) -> 0 * z
	(x * y) * z -> x * (y * z)
	0 * (s(s(0)) * z) -> 0 * z
	(0 + x) * z -> x * (s(0) * z)
	0 * (s(s(s(0))) * z) -> 0 * z
	s(0) * (s(0) * z) -> s(0) * z
	s(0) * (s(s(0)) * z) -> s(s(0)) * z
	s(s(0)) * (s(0) * z) -> s(s(0)) * z
	s(0 + xts) * z -> s(xts) * (s(0) * z)
	((0 + x) + x) * z -> x * (s(s(0)) * z)
	((x * xts) + x) * z -> x * (s(xts) * z)
	s(0) * (s(s(s(0))) * z) -> s(s(s(0))) * z
	s(s(0 + xts)) * z -> s(s(xts)) * (s(0) * z)
	s(s(s(s(0)))) * z -> s(s(0)) * (s(s(0)) * z)
	(((0 + x) + x) + x) * z -> x * (s(s(s(0))) * z)
	(((x * xts) + x) + x) * z -> x * (s(s(xts)) * z)
	s(s(0 + xts) + xts) * z -> s(xts) * (s(s(0)) * z)
	s(s(s(0 + xts))) * z -> s(s(s(xts))) * (s(0) * z)
	s(s(s(s(s(s(0)))))) * z -> s(s(0)) * (s(s(s(0))) * z)
	((((x * xts) + x) + x) + x) * z -> x * (s(s(s(xts))) * z)
	s(s(s(s(0 + xts)) + xts)) * z -> s(s(xts)) * (s(s(0)) * z)
	s(s(s(0 + xts) + xts) + xts) * z -> s(xts) * (s(s(s(0))) * z)
	s(s(s(s(s(s(0 + xts))) + xts))) * z -> s(s(s(xts))) * (s(s(0)) * z)
	s(s(s(s(s(s(0 + xts)) + xts)) + xts)) * z -> s(s(xts)) * (s(s(s(0))) * z)
	s(s(s(s(s(s(s(s(s(0 + xts))) + xts))) + xts))) * z -> s(s(s(xts))) * (s(s(s(0))) * z)
--- Primal Grammar:
+++ Presburger system  = {
	^f0(0; x, xts) -> x * xts
	^f0($n0 + 1; x, xts) -> ^f0($n0; x, xts) + x
	^f1(0; xts) -> xts
	^f1($n1 + 1; xts) -> s(^f1($n1; xts))
	^f10(0) -> 0
	^f10($n10 + 1) -> s(s(^f10($n10)))
	^f11(0, $n5; xts) -> s(^f5($n5; xts)) + xts
	^f11($n11 + 1, $n5; xts) -> s(^f11($n11, $n5 + 1; xts))
	^f13(0) -> 0
	^f13($n13 + 1) -> s(s(s(^f13($n13))))
	^f14(0, $n11; xts) -> s(^f11($n11, 0; xts)) + xts
	^f14($n14 + 1, $n11; xts) -> s(^f14($n14, $n11 + 1; xts))
	^f3(0; x) -> 0
	^f3($n3 + 1; x) -> ^f3($n3; x) + x
	^f4(0) -> 0
	^f4($n4 + 1) -> s(^f4($n4))
	^f5(0; xts) -> 0 + xts
	^f5($n5 + 1; xts) -> s(^f5($n5; xts))
	^f9(0; xts) -> 0
	^f9($n9 + 1; xts) -> s(^f9($n9; xts) + xts)
+++ }
+++ Lemma(s)           = 
	(^f0($n; x, xts) + x) * z = x * (s(^f1($n; xts)) * z)
	(^f3($n; x) + x) * z = x * (s(^f4($n)) * z)
	^f4($n) * z = ^f4($n) * (s(0) * z)
	s(^f5($n; xts)) * z = s(^f1($n; xts)) * (s(0) * z)
	0 * z = 0 * (s(^f4($n)) * z)
	s(^f9($n; xts) + xts) * z = s(xts) * (s(^f4($n)) * z)
	^f10($n) * z = ^f4($n) * (s(s(0)) * z)
	s(^f11($n, 0; xts)) * z = s(^f1($n; xts)) * (s(s(0)) * z)
	^f13($n) * z = ^f4($n) * (s(s(s(0))) * z)
	s(^f14($n, 0; xts)) * z = s(^f1($n; xts)) * (s(s(s(0))) * z)

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 26
... Number of induction steps      = 26
... Number of equational steps     = 0
... Number of case rewriting steps = 0
... Number of PG defined symbols   = 10
... Number of PG lemmas            = 10
... Elapsed time (seconds)         = 0.137
