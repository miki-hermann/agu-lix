specification sorted

sorts

	bool nat list

constructors

	false, true: -> bool
	0: -> nat
	s: nat -> nat
	nil: -> list
	cons: nat list -> list

defined functions

	<=: nat nat -> bool
	sorted: list -> bool
	isort: list -> list
	insert: nat list -> list

precedence

	sorted > isort > insert > <= > cons > nil > s > 0 > true = false

axioms

	0 <= x = true;
	s(x) <= 0 = false;
	s(x) <= s(y) = x <= y;
	insert(x, nil) = cons(x, nil);
	x <= y = true  => insert(x, cons(y, z)) = cons(x, cons(y, z));
	x <= y = false => insert(x, cons(y, z)) = cons(y, insert(x, z));

	sorted(nil) = true;
	sorted(cons(x, nil)) = true;
	x <= y = true => sorted(cons(x, cons(y, z))) = sorted(cons(y, z));
	x <= y = false => sorted(cons(x, cons(y, z))) = false;
	isort(nil) = nil;
	isort(cons(x, y)) = insert(x, isort(y));

conjectures

	sorted(isort(xl)) = true;

end
