+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 51-invariant-in.txt
+++ output      = 51-invariant-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 10
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification invariant from 51-invariant-in.txt successfully parsed
+++ Listing
         1: specification invariant
         2: sorts
         3:      action bool state
         4: constructors
         5:      Nop: -> action
         6:      S0: -> state
         7:      do: action state -> state
         8:      false: -> bool
         9:      true: -> bool
        10: defined functions
        11:      F1: state -> bool
        12:      F2: state -> bool
        13:      F3: state -> bool
        14:      or: bool bool -> bool
        15: precedence
        16:      F1 = F2 = F3 > or > do > S0 > Nop > true > false
        17: axioms
        18:      F1(S0) = true;
        19:      F3(S0) = true;
        20:      F2(S0) = false;
        21:      or(true, x) = true;
        22:      or(x, true) = true;
        23:      F2(do(x, y)) = F3(y);
        24:      F3(do(x, y)) = F2(y);
        25:      or(false, false) = false;
        26:      F1(do(x, y)) = or(F2(y), F3(y));
        27: conjectures
        28:      F1(y) = true;
        29: end
+++ finitary sorts: action bool
+++ Rewrite System 
	F1(S0) -> true
	F3(S0) -> true
	F2(S0) -> false
	or(true, x) -> true
	or(x, true) -> true
	F2(do(x, y)) -> F3(y)
	F3(do(x, y)) -> F2(y)
	or(false, false) -> false
	F1(do(x, y)) -> or(F2(y), F3(y))
+++ inductive positions:
... for F1: 0
... for F2: 0
... for F3: 0
... for or: 0 1
+++ maximal depths of left-hand sides:
... for or: 1
... for F2: 2
... for F3: 2
... for F1: 2
+++ general maximal depth = 2
+++ sort dependence: action < state
+++ test sets for defined functions and sorts:
... for or
... ... bool
		x
... for F3
... ... state
		S0
		do(x, y)
... for F2
... ... state
		S0
		do(x, y)
... for F1
... ... state
		S0
		do(x, y)

+++ conjecture(s)
	F1(y) = true

+++ inference system initiated
+++ treating clause
	F1(y) = true
+++ inductive narrowing on conjecture
	F1(y) = true
... induction variables of
	F1(y) = true
... are:
	y:state
+++ perform INDUCTIVE NARROWING on conjecture 
	F1(y) = true
... with variable y
+++ creating new conjecture
	F1(S0) = true
+++ creating new conjecture
	F1(do(xts, yts)) = true
--- clause
	F1(S0) = true
... reduced to tautology
	true = true
--- clause
	F1(do(xts, yts)) = true
... reduced in 1 step to
	or(F2(yts), F3(yts)) = true
+++ inductive narrowing succeeded
--- clause
	F1(y) = true
... oriented to rule
	F1(y) -> true
+++ added new clause(s)
	or(F2(yts), F3(yts)) = true
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	or(F2(yts), F3(yts)) = true
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	F1(y) -> true
--- Primal Grammar:
	<empty>

+++ treating clause
	or(F2(yts), F3(yts)) = true
+++ inductive narrowing on conjecture
	or(F2(yts), F3(yts)) = true
... induction variables of
	or(F2(yts), F3(yts)) = true
... are:
	yts:state
+++ perform INDUCTIVE NARROWING on conjecture 
	or(F2(yts), F3(yts)) = true
... with variable yts
+++ creating new conjecture
	or(F2(S0), F3(S0)) = true
+++ creating new conjecture
	or(F2(do(xts, yts)), F3(do(xts, yts))) = true
--- clause
	or(F2(S0), F3(S0)) = true
... reduced to tautology
	true = true
--- clause
	or(F2(do(xts, yts)), F3(do(xts, yts))) = true
... reduced in 2 steps to
	or(F3(yts), F2(yts)) = true
+++ inductive narrowing succeeded
--- clause
	or(F2(yts), F3(yts)) = true
... oriented to rule
	or(F2(yts), F3(yts)) -> true
+++ added new clause(s)
	or(F3(yts), F2(yts)) = true
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	or(F3(yts), F2(yts)) = true
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	F1(y) -> true
	or(F2(yts), F3(yts)) -> true
--- Primal Grammar:
	<empty>

+++ treating clause
	or(F3(yts), F2(yts)) = true
+++ inductive narrowing on conjecture
	or(F3(yts), F2(yts)) = true
... induction variables of
	or(F3(yts), F2(yts)) = true
... are:
	yts:state
+++ perform INDUCTIVE NARROWING on conjecture 
	or(F3(yts), F2(yts)) = true
... with variable yts
+++ creating new conjecture
	or(F3(S0), F2(S0)) = true
+++ creating new conjecture
	or(F3(do(xts, yts)), F2(do(xts, yts))) = true
--- clause
	or(F3(S0), F2(S0)) = true
... reduced to tautology
	true = true
--- clause
	or(F3(do(xts, yts)), F2(do(xts, yts))) = true
... reduced to tautology
	true = true
+++ inductive narrowing succeeded
--- clause
	or(F3(yts), F2(yts)) = true
... oriented to rule
	or(F3(yts), F2(yts)) -> true

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	<empty>
--- Oriented hypotheses:
	F1(y) -> true
	or(F2(yts), F3(yts)) -> true
	or(F3(yts), F2(yts)) -> true
--- Primal Grammar:
	<empty>

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 3
... Number of induction steps      = 3
... Number of equational steps     = 0
... Number of case rewriting steps = 0
... Elapsed time (seconds)         = 0.001
