+++ SPECIFICATION --- bidirectional branch, version 0.99
+++ Parameters:
    ===========
+++ input       = 32-mult-in.txt
+++ output      = 32-mult-out.txt
+++ trace       = 3
+++ direction   = first-to-last
+++ drop        = yes
+++ verbose     = 3
+++ split       = 4
+++ loop limit  = 10
+++ stdlib      = /usr/local/lib/indy/stdlib/
-----------------------------------------------------------------------

+++ specification mult from 32-mult-in.txt successfully parsed
+++ Listing
         1: specification mult
         2: sorts
         3:      nat
         4: constructors
         5:      0: -> nat
         6:      s: nat -> nat
         7: defined functions
         8:      *: nat nat -> nat
         9:      +: nat nat -> nat
        10: precedence
        11:      * > + > s > 0
        12: axioms
        13:      x * 0 = 0;
        14:      x + 0 = x;
        15:      x + s(y) = s(x + y);
        16:      x * s(y) = (x * y) + x;
        17: conjectures
        18:      x * y = y * x;
        19: end
+++ finitary sorts: <empty>
+++ Rewrite System 
	x * 0 -> 0
	x + 0 -> x
	x + s(y) -> s(x + y)
	x * s(y) -> (x * y) + x
+++ inductive positions:
... for *: 1
... for +: 1
+++ maximal depths of left-hand sides:
... for +: 2
... for *: 2
+++ general maximal depth = 2
+++ sort dependence: <empty>
+++ test sets for defined functions and sorts:
... for +
... ... nat
		0
		s(x)
... for *
... ... nat
		0
		s(x)

+++ conjecture(s)
	x * y = y * x

+++ inference system initiated
+++ treating clause
	x * y = y * x
+++ inductive narrowing on conjecture
	x * y = y * x
... induction variables of
	x * y = y * x
... are:
	x:nat
	y:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	x * y = y * x
... with variable x
+++ creating new conjecture
	0 * y = y * 0
+++ creating new conjecture
	s(xts) * y = y * s(xts)
--- clause
	0 * y = y * 0
... reduced in 1 step to
	0 * y = 0
--- clause
	s(xts) * y = y * s(xts)
... reduced in 1 step to
	s(xts) * y = (y * xts) + y
+++ inductive narrowing succeeded
--- non-orientable clause
	x * y = y * x
+++ moved
	x * y = y * x
... to non-orientable hypotheses
+++ added new clause(s)
	0 * y = 0
	s(xts) * y = (y * xts) + y
... to conjectures

+++ Status of the Inference System
--- Conjectures:
	0 * y = 0
	s(xts) * y = (y * xts) + y
--- Non-orientable hypotheses:
	x * y = y * x
--- Oriented hypotheses:
	<empty>
--- Primal Grammar:
	<empty>

+++ treating clause
	0 * y = 0
+++ inductive narrowing on conjecture
	0 * y = 0
... induction variables of
	0 * y = 0
... are:
	y:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	0 * y = 0
... with variable y
+++ creating new conjecture
	0 * 0 = 0
+++ creating new conjecture
	0 * s(xts) = 0
--- clause
	0 * 0 = 0
... reduced to tautology
	0 = 0
--- clause
	0 * s(xts) = 0
... reduced in 2 steps to
	0 * xts = 0
+++ inductive narrowing succeeded
--- clause
	0 * y = 0
... oriented to rule
	0 * y -> 0
+++ added new clause(s)
	0 * xts = 0
... to conjectures
--- clause
	0 * xts = 0
... reduced to tautology
	0 = 0

+++ Status of the Inference System
--- Conjectures:
	s(xts) * y = (y * xts) + y
--- Non-orientable hypotheses:
	x * y = y * x
--- Oriented hypotheses:
	0 * y -> 0
--- Primal Grammar:
	<empty>

+++ treating clause
	s(xts) * y = (y * xts) + y
+++ inductive narrowing on conjecture
	s(xts) * y = (y * xts) + y
... induction variables of
	s(xts) * y = (y * xts) + y
... are:
	xts:nat
	y:nat
+++ perform INDUCTIVE NARROWING on conjecture 
	s(xts) * y = (y * xts) + y
... with variable xts
+++ creating new conjecture
	s(0) * y = (y * 0) + y
+++ creating new conjecture
	s(s(xts)) * y = (y * s(xts)) + y
--- clause
	s(0) * y = (y * 0) + y
... reduced in 1 step to
	s(0) * y = 0 + y
--- clause
	s(s(xts)) * y = (y * s(xts)) + y
... reduced in 1 step to
	s(s(xts)) * y = ((y * xts) + y) + y
+++ inductive narrowing succeeded
--- clause
	s(xts) * y = (y * xts) + y
... oriented to rule
	s(xts) * y -> (y * xts) + y
+++ added new clause(s)
	s(0) * y = 0 + y
	s(s(xts)) * y = ((y * xts) + y) + y
... to conjectures
--- clause
	s(0) * y = 0 + y
... reduced in 1 step to
	(y * 0) + y = 0 + y
--- clause
	s(s(xts)) * y = ((y * xts) + y) + y
... reduced in 1 step to
	(y * s(xts)) + y = ((y * xts) + y) + y

+++ Status of the Inference System
--- Conjectures:
	(y * 0) + y = 0 + y
	(y * s(xts)) + y = ((y * xts) + y) + y
--- Non-orientable hypotheses:
	x * y = y * x
--- Oriented hypotheses:
	0 * y -> 0
	s(xts) * y -> (y * xts) + y
--- Primal Grammar:
	<empty>

--- clause
	(y * 0) + y = 0 + y
... reduced to tautology
	0 + y = 0 + y
--- clause
	(y * s(xts)) + y = ((y * xts) + y) + y
... reduced to tautology
	((y * xts) + y) + y = ((y * xts) + y) + y

+++ Status of the Inference System
--- Conjectures:
	<empty>
--- Non-orientable hypotheses:
	x * y = y * x
--- Oriented hypotheses:
	0 * y -> 0
	s(xts) * y -> (y * xts) + y
--- Primal Grammar:
	<empty>

+++ SUCCESS: all conjectures proved
+++ Statistics:
... Number of proof steps          = 4
... Number of induction steps      = 3
... Number of equational steps     = 0
... Number of case rewriting steps = 0
... Elapsed time (seconds)         = 0.001
